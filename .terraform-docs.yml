formatter: "markdown"

version: ""

header-from: main.tf
footer-from: ""

recursive:
  enabled: false
  path: modules

sections:
  hide: []
  show: []

content: ""

output:
  file: "README.md"
  mode: inject
  template: |-
    <!-- BEGIN_TF_DOCS -->
    # Quick AWS EKS

    [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)

    Terraform project which create VPC, KMS and EKS resource on AWS from scratch.

    ## *Create and destroy the infrastructure*

    ### 1. Create infrastructure

    ```shell
    git clone https://github.com/mbasri/quick-aws-eks.git
    cd quick-aws-eks
    terraform init
    terraform apply
    ```

    ### 2. Destroy infrastructure

    ```shell
    git clone https://github.com/mbasri/quick-aws-eks.git
    cd quick-aws-eks
    terraform init
    terraform destroy
    ```

    ## Update kubeconfig file

    ```bash
    # Select AWS default profile
    export AWS_DEFAULT_PROFILE=

    # Update kubeconfig
    aws eks update-kubeconfig --name quick-aws-eks
    ```

    ## Deploy ArgoCD

    ```bash
    # Install ArgoCD using Kustomize
    kubectl apply -k k8s.d/argocd/base

    # Deploy ArgoCD self-managed application
    kubectl apply -k argocd.d/argocd-self-managed/base
    
    # Get ArgoCD admin password
    kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d; echo

    # Initialize Port Forwarding
    kubectl -n argocd port-forward svc/argocd-server 8080:443
    ```

    ## Deploy self hosted Github actions runner

    ```bash
    # Install GitHub ARC using Helm
    NAMESPACE="arc-systems"
    helm install arc \
        --namespace "${NAMESPACE}" \
        --create-namespace \
        --version 0.12.1 \
        --values helm.d/gha-runner-scale-set-controller-values.yaml \
        oci://ghcr.io/actions/actions-runner-controller-charts/gha-runner-scale-set-controller

    # Install GitHub runner scale settings
    INSTALLATION_NAME="arc-runner-set"
    NAMESPACE="arc-runners"
    GITHUB_CONFIG_URL="https://github.com/mbasri/quick-aws-eks"
    GITHUB_PAT="<PAT>"
    helm install "${INSTALLATION_NAME}" \
      --namespace "${NAMESPACE}" \
      --create-namespace \
      --set githubConfigUrl="${GITHUB_CONFIG_URL}" \
      --set githubConfigSecret.github_token="${GITHUB_PAT}" \
      --values helm.d/gha-runner-scale-set-values.yaml \
      oci://ghcr.io/actions/actions-runner-controller-charts/gha-runner-scale-set
    ```

    ## Deploy Cluster Autoscaler
    
    ```bash
    # Install Cluster Autoscaler
    curl -LO https://raw.githubusercontent.com/kubernetes/autoscaler/refs/tags/cluster-autoscaler-1.33.0/cluster-autoscaler/cloudprovider/aws/examples/cluster-autoscaler-autodiscover.yaml
    sed -i 's/<YOUR CLUSTER NAME>/--><YOUR_CLUSTER_NAME><--/g' cluster-autoscaler-autodiscover.yaml
    kubectl apply -f cluster-autoscaler-autodiscover.yaml

    # Deploy Pod Identity for cluster-autoscaler
    eksctl create podidentityassociation \
    --cluster my-eks-name \
    --namespace kube-system \
    --service-account-name cluster-autoscaler \
    --role-arn --><ROLE_ARN><--

    # Restart cluster-autoscaler Deployment
    kubectl rollout restart deployment cluster-autoscaler -n kube-system
    ```

    ## *Generate docs*
    
    ```shell
    terraform-docs -c .terraform-docs.yml .
    ```

    {{ .Content }}

    ## *Author*

    * [**Mohamed BASRI**](https://github.com/mbasri)

    ## *License*

    This is free and unencumbered software released into the public domain - see the [LICENSE](./LICENSE) file for details

    <!-- END_TF_DOCS -->

output-values:
  enabled: false
  from: ""

sort:
  enabled: true
  by: name

settings:
  anchor: true
  color: true
  default: true
  description: false
  escape: true
  hide-empty: false
  html: true
  indent: 2
  lockfile: true
  read-comments: true
  required: true
  sensitive: true
  type: true
